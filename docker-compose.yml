services:
  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init-scripts/:/docker-entrypoint-initdb.d/

    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s

  mongodb_sport:
    image: mongo:latest
    container_name: mongodb_sport
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: sport-service
    volumes:
      - mongodb_sport_data:/data/db
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      app-network:
        aliases:
          - redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

  accommodation-service:
    build:
      context: accommodation-service
      dockerfile: Dockerfile
    container_name: accommodation-service
    ports:
      - "8081:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/accommodation_service
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network


  reservation-service:
    build:
      context: ./reservation-service
      dockerfile: Dockerfile
    container_name: reservation-service
    ports:
      - "8082:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/reservation_service
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  resource-service:
    build:
      context: ./resource-service
      dockerfile: Dockerfile
    container_name: resource-service
    ports:
      - "8083:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/resource_service
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  sport-service:
    build:
      context: ./sport-service
      dockerfile: Dockerfile
    container_name: sport-service
    ports:
      - "8084:8080"
    environment:
      - MONGO_URI=mongodb://mongodb_sport:27017/sport-service
    depends_on:
      - mongodb_sport
      - mysql
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - sport-service
      - reservation-service
      - resource-service
      - accommodation-service
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD : admin
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloak
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: password
      KEYCLOAK_HTTP_PORT: 9090
    command:
      - start-dev
    ports:
      - "9090:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  mongodb_sport_data:
